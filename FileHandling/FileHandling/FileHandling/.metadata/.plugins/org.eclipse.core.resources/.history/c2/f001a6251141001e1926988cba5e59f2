package com.main.serviceImpl;

import java.io.IOException;

import java.util.UUID;

import org.apache.commons.lang3.RandomStringUtils;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;
import org.springframework.web.multipart.MultipartFile;

import com.main.exception.ResourceNotFoundException;
import com.main.model.Image;
import com.main.model.User;
import com.main.payload.UserDto;
import com.main.repo.ImageRepo;
import com.main.repo.UserRepo;
import com.main.service.UserService;

import antlr.StringUtils;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	private UserRepo userRepo;

	@Autowired
	private ModelMapper mapper;

	@Autowired
	private ImageRepo imageRepo;

	@Override
	public UserDto createUser(UserDto userDto) {
		User user = this.mapper.map(userDto, User.class);
		String id = UUID.randomUUID().toString();
		user.setId(id);
		User save = this.userRepo.save(user);
		return this.mapper.map(save, UserDto.class);

	}

	@Override
	public UserDto findUserById(String id) {
		User user = this.userRepo.findById(id)
				.orElseThrow(() -> new ResourceNotFoundException("No user found with id :" + id));
		return this.mapper.map(user, UserDto.class);

	}

	public void uploadUserImages(String userId, MultipartFile[] files) throws Exception, IOException {
		User user = userRepo.findById(userId)
				.orElseThrow(() -> new ResourceNotFoundException("User not found with id :" + id));
		for (MultipartFile file : files) {
			String fileName = StringUtils.cleanPath(file.getOriginalFilename());
			String randomStr = RandomStringUtils.random(10,
					"abcdefghijklmnopqrstwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
			String uniqueStr = randomStr + UUID.randomUUID().toString();
			uniqueStr += fileName;
			String uploadDir = "roshan-folder/" + user.getId();
			Image imgModel = new Image();
			imgModel.setImgName(uniqueStr);
			imgModel.setUser(user);
			imgModel.setImgPath(imgModel.getImgPath());

			user.getImages().add(imageRepo.save(imgModel));

			FileUploadUtil.saveFile(uploadDir, uniqueStr, file);
		}

		userRepo.save(user);

	}

}
