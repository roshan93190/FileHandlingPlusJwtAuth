package com.main.controller;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.util.StreamUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.*;

import com.main.payload.UserDto;
import com.main.service.UserService;
import com.main.serviceImpl.FileUploadUtil;

@RestController
@RequestMapping("api/v1/users/")
public class UserController {

	@Autowired
	private UserService userService;

	@Autowired
	private FileUploadUtil fileService;

	@PostMapping
	public ResponseEntity<UserDto> submitUser(@RequestBody UserDto user) {
		UserDto createUser = this.userService.createUser(user);
		return new ResponseEntity<UserDto>(createUser, HttpStatus.OK);
	}

//	upload user images
	@PostMapping("/images/{userId}")
	public ResponseEntity<?> uploadUserImages(@PathVariable String userId, @RequestParam MultipartFile[] files)
			throws IOException, Exception {
		this.userService.uploadUserImages(userId, files);
		return new ResponseEntity<String>("Image uploaded Successfully", HttpStatus.OK);
	}

	@GetMapping("images/{id}/{imageName}")
	public void downloadImage(@PathVariable String imageName, @PathVariable String id, HttpServletResponse response)
			throws IOException {
		try {
			InputStream resource = fileService.getResource("roshan-folder" + id, imageName);
			response.setContentType(MediaType.IMAGE_JPEG_VALUE);
			StreamUtils.copy(resource, response.getOutputStream());
		} catch (FileNotFoundException e) {
			// Handle the case where the file is not found
			response.setStatus(HttpStatus.NOT_FOUND.value());
		}
	}

}
